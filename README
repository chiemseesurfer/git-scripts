             ,
         -  /|
        -  / |
      -   /o |
   ~^~ ^~//-'|~^~ ~^~
    ~^~.-->>---. ~^ ~^~
   ~^~ `"""""""` ^~^ ~^
    ~^~ ~^ ~^~^ ~^~^ ~^
    Max Oberberger
    max@oberbergers.de
    https://github.com/chiemseesurfer/git-scripts
    www.maxoberberger.net

##########################################################################
Copyright 2012 Max Oberberger

Table of Contents
=================
	1. Introduction
	2. System Requirements
	3. Installation
	4. Using containing scripts
	5. References


1.Introduction
===============
If you are using git [1] for source control, then this scripts might be useful
to you.


2. System Requirements
===============
	- Git Version 1.6.x.y or newer (I've tested with 1.7.2.5)
	  debian packages for all scripts:
		* git
		* git-core

	- SVN Version 1.6.X or newer (I've tested with 1.6.12) - required for
	  convert-svn-to-git.sh

	- debian-package git-svn (required for convert-svn-to-git.sh): A 
	  Bidirectional operation between a Subversion repository and git. 
	  It is a simple conduit for changesets between Subversion and 
	  git. It provides a bidirectional flow of changes between a 
	  Subversion and a git repository.


3. Installation
===============
3.1 copy in local folder (root required)
---------------
	You can copy the scripts to /usr/local/bin. If done, the script is
	located in your $PATH and you can execute it by just calling the script.
	For this you need root permissions on your computer. If you don't have
	root permissions, you can use 3.2.
	Example:
	$ sudo cp settings/git-settings.sh /usr/local/bin/
	$ git-settings.sh -h

3.2 change $PATH (no root required)
---------------
	If you don't have root permissions on your client, you can modify your
	$PATH variable.
	clone this repository whereever you want and export your $PATH in your
	bashrc with the path to your cloned directory:
	Example:
	$ cd /tmp/
	$ git clone https://github.com/chiemseesurfer/git-scripts.git
	$ cd git-scripts
	$ pwd
	/tmp/git-scripts
	$ echo "export PATH=$PATH:/tmp/git-scripts" >> ~/.bashrc
	$ export .bashrc


4. Using containing scripts
===============
	Every script has its own helpmenu (use -h or --help). Sometimes if you
	don't know how to use a script, you can have a look at one of these 
	helpmenus.

	I also give you a short explanation how to use my scripts in this
	README-file.

4.1 Using git-settings.sh
---------------

4.2 Using split-repo.sh
---------------

4.3 Using convert-svn-to-git.sh
---------------


5. References
===============
[1] Git, an source configuration management ("SCM") tool
    http://git-scm.com/


Info: 
Every script has its own helpmenu (use -h or --help). Use this helpmenu
to get a exact overview about the functions.

--------------------------------------------------------------------------

settings/git-settings.sh: (tested on osx-lion, SuSE and debian)
	A script to set useful global git settings (aliases, user-name and 
	user-email,...)

repos/split-repo.sh:
	This program excludes a folder in an existing git-repository to 
	a new git-repository.

svn/convert-svn-to-git.sh:
	This script makes it possible to convert a svn-repository into a
	git-repository. Use the included helpmenu to see how it works.
##########################################################################
